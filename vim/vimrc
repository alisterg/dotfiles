" Set leader to Spacebar
nnoremap <Space> <Nop>
let mapleader=" "
let maplocalleader=" "

autocmd! 
scriptencoding utf-8 " set script encoding

" PLUGINS -------------------------------------------------------------------
call plug#begin()
  Plug 'airblade/vim-gitgutter'
  Plug 'junegunn/vim-easy-align' " align text
  Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
  Plug 'junegunn/fzf.vim'
call plug#end()

" THEME ---------------------------------------------------------------------

syntax on
set termguicolors
runtime ./aspace.vim

" Makes it less bright
highlight SignColumn cterm=NONE ctermbg=0 ctermfg=NONE guibg=Black
highlight Folded cterm=NONE ctermbg=236 ctermfg=NONE guibg=Black

" Gitgutter colors
highlight GitGutterAdd ctermfg=2
highlight GitGutterChange ctermfg=11
highlight GitGutterDelete ctermfg=5
highlight GitGutterChangeDelete ctermfg=5

" SETTINGS-----------------------------------------------------------------

filetype plugin indent on
let g:markdown_folding = 1
set scrolloff=10
set expandtab
set ignorecase
set number
set mouse=a
set shiftwidth=4
set tabstop=4
set ai                            " Auto indent
set si                            " Smart indent
set wrap                          " Soft Wrap lines
set foldmethod=indent
set foldnestmax=3
set foldlevel=3
set foldminlines=0
set incsearch
set hlsearch
set ruler
set title
set formatoptions+=r              " Add asterisks in block comments
set re=0                          " Fixes typescript syntax issue
set timeoutlen=1000 ttimeoutlen=0 " Remove the delay when exiting Visual mode

" Netrw - file explorer
let g:netrw_banner = 0       " Hide banner by default
let g:netrw_browse_split = 4 " Open files in previous window (main window usually)
let g:netrw_winsize = 24     " Width of the window
let g:netrw_liststyle = 3    " Tree view

let g:NetrwIsOpen=0
function! ToggleNetrw()
    if g:NetrwIsOpen
        let i = bufnr("$")
        while (i >= 1)
            if (getbufvar(i, "&filetype") == "netrw")
                silent exe "bwipeout " . i 
            endif
            let i-=1
        endwhile
        let g:NetrwIsOpen=0
    else
        let g:NetrwIsOpen=1
        silent :Vexplore
    endif
endfunction
noremap <silent> <C-e> :call ToggleNetrw()<CR>
inoremap <silent> <C-e> :call ToggleNetrw()<CR>

"-----------------------------
" KEYMAPS

" Insert text at the current cursor position.
function! InsertText(text)
    execute "normal! i\<C-r>=a:text\<CR>\<Esc>"
endfunction
"nmap <leader>r :call InsertText(some_variable)<CR>

" Insert current datetime
inoremap <C-d> [<esc>"=strftime("%F %H:%M")<CR>pa]

" Insert current date markdown heading
nmap <leader>d o<CR># <esc>"=strftime("%F")<CR>pa<CR><CR>

" This removes the highlight from search results
nmap <esc> :noh<CR>

" EasyAlign plugin
xmap <leader>a <Plug>(EasyAlign)

" FZF plugin
nmap <leader>f :Files<CR>
nmap <leader>a :Rg<CR>
" FZF config
let g:fzf_vim = {}
let g:fzf_vim.preview_window = ['up,50%', 'ctrl-/']

"--------------------------
"Git Gutter
"set signcolumn=yes
let g:gitgutter_sign_added = '+'
let g:gitgutter_sign_modified = '~'
let g:gitgutter_sign_modified_removed = '-'
let g:gitgutter_sign_removed = '-'
let g:gitgutter_sign_removed_first_line = '-'
let g:gitgutter_sign_removed_above_and_below = '-'

" Updates gitgutter every 200ms
set updatetime=200

" Display the syntax highlight group of the symbol under cursor
nnoremap <leader>ii :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>
